#!/bin/bash
# as of http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

FOLDER_CHECKS=(deployment-agent/ .travis.yml)

before_install() {
    if bash ci/travis/helpers/test_for_changes "${FOLDER_CHECKS[@]}";
    then
        bash ci/travis/helpers/install_docker_compose
        bash ci/helpers/show_system_versions.bash
    fi
}

install() {
    if bash ci/travis/helpers/test_for_changes "${FOLDER_CHECKS[@]}";
    then
        bash ci/helpers/ensure_python_pip.bash
    fi
}

before_script() {
    if bash ci/travis/helpers/test_for_changes "${FOLDER_CHECKS[@]}";
    then
        pushd services/deployment-agent; make install-test; popd
        pip freeze
        docker images
    fi
}

script() {
    if bash ci/travis/helpers/test_for_changes "${FOLDER_CHECKS[@]}";
    then
        pushd services/deployment-agent; make unit-test; popd
    else
        echo "No changes detected. Skipping unit-testing of deployment-agent."
    fi
}

after_success() {
    if bash ci/travis/helpers/test_for_changes "${FOLDER_CHECKS[@]}";
    then
        coveralls
        codecov
    fi
}

# Check if the function exists (bash specific)
if declare -f "$1" > /dev/null
then
  # call arguments verbatim
  "$@"
else
  # Show a helpful error
  echo "'$1' is not a known function name" >&2
  exit 1
fi
