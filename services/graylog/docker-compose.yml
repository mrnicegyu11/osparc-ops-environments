version: "3.7"
services:
  # MongoDB: https://hub.docker.com/_/mongo/
  mongodb:
    image: mongo:3
    init: true
    volumes:
      # data persistency
      - mongo_data:/data/db
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role==manager
    networks:
      default:
        aliases:
          - mongo # needed because of graylog configuration

  # Elasticsearch: https://www.elastic.co/guide/en/elasticsearch/reference/6.6/docker.html
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.5
    init: true
    volumes:
      # data persistency
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      resources:
        limits:
          memory: 1G
  # Graylog: https://hub.docker.com/r/graylog/graylog/
  graylog:
    image: graylog/graylog:3.2
    init: true
    # user: "1000:1001"
    volumes:
      # Mount local configuration directory into Docker container
      # - graylog_config:/usr/share/graylog/data/config
      # data persistency
      - graylog_journal:/usr/share/graylog/data/journal
    environment:
      # CHANGE ME (must be at least 16 characters)!
      - GRAYLOG_PASSWORD_SECRET=${GRAYLOG_PASSWORD_SECRET:-somepasswordpepper}
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=${GRAYLOG_ROOT_PASSWORD_SHA2:-8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918}
      - GRAYLOG_HTTP_EXTERNAL_URI=${GRAYLOG_HTTP_EXTERNAL_URI:-http://127.0.0.1:19000/}
    depends_on:
      - mongodb
      - elasticsearch
    networks:
      - public
      - default
    # ports:
    #   # Graylog web interface and REST API
    #   - 19000:9000
    #   # Syslog TCP
    #   - 1514:1514
    #   # Syslog UDP
    #   - 1514:1514/udp
    #   # GELF TCP
    #   - 12201:12201
    #   # GELF UDP
    #   - 12201:12201/udp
    #   # Raw/Plaintext TCP
    #   - 5555:5555
    #   # Raw/Plaintext UDP
    #   - 5555:5555/udp
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.docker.network=${PUBLIC_NETWORK}
        # direct access through port
        - traefik.http.services.graylog.loadbalancer.server.port=9000
        - traefik.http.routers.graylog.rule=Host(`${MONITORING_DOMAIN}`) && PathPrefix(`/graylog`)
        - traefik.http.routers.graylog.entrypoints=https
        - traefik.http.routers.graylog.tls=true
        - traefik.http.middlewares.graylog_replace_regex.replacepathregex.regex=^/graylog/?(.*)$$
        - traefik.http.middlewares.graylog_replace_regex.replacepathregex.replacement=/$${1}
        - traefik.http.routers.graylog.middlewares=ops_whitelist_ips@docker, ops_gzip@docker, graylog_replace_regex
      placement:
        constraints:
          - node.role==manager

  # Logspout: https://github.com/gliderlabs/logspout
  logspout:
    image: vincit/logspout-gelf
    command: multiline+gelf://graylog:12201
    depends_on:
      - graylog
    init: true
    volumes:
      ##########- /etc/hostname:/etc/host_hostname # does not work in windows
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - ALLOW_TTY=true
      - MULTILINE_MATCH=first
      - MULTILINE_PATTERN=^(ERROR|WARNING|INFO|DEBUG|CRITICAL)[:]
      - MULTILINE_ENABLE_DEFAULT=false
    deploy:
      mode: global
      resources:
        limits:
          cpus: "0.20"
          memory: 256M
        reservations:
          cpus: "0.10"
          memory: 128M
    # ports:
    #   - 18000:80

volumes:
  mongo_data:
  elasticsearch_data:
  # graylog_config:
  graylog_journal:

networks:
  public:
    external: true
    name: ${PUBLIC_NETWORK}
