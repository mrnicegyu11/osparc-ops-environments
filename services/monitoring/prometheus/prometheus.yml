# my global config
global:
  scrape_interval: 15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: "sim-core-monitor"

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  - "alert.rules"
  - "prometheus.rules.yml"
  # - "first.rules"
  # - "second.rules"

# alert
alerting:
  alertmanagers:
    - scheme: http
      static_configs:
        - targets:
            - "alertmanager:9093"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.

  - job_name: "prometheus"
    static_configs:
      - targets: ["localhost:9090"]

  - job_name: "cadvisor"
    dns_sd_configs:
      - names:
          - "tasks.cadvisor"
        type: "A"
        port: 8080

  - job_name: "node-exporter"
    dns_sd_configs:
      - names:
          - "tasks.node-exporter"
        type: "A"
        port: 9100

  - job_name: "nvidia-exporter"
    dns_sd_configs:
      - names:
          - "tasks.nvidia-exporter"
        type: "A"
        port: 9445

  # monitor docker engine (https://docs.docker.com/config/thirdparty/prometheus/)
  - job_name: "dockerd-exporter"
    dns_sd_configs:
      - names:
          - "tasks.dockerd-exporter"
        type: "A"
        port: 9323

  # SIMCORE -------------------------------------------------------------------
  - job_name: "simcore"
    relabel_configs:
      - source_labels: [__meta_dns_name]
        regex: ^(.*?)[_-].*$
        replacement: $1
        target_label: deployment
      - source_labels: [__meta_dns_name]
        regex: ^.*?[_-](.*)$
        replacement: $1
        target_label: service_name
    dns_sd_configs:
      - names:
          - "webserver"
        type: "A"
        port: 8080
      - names:
          - "storage"
        type: "A"
        port: 8080
      - names:
          - "director"
        type: "A"
        port: 8080
      - names:
          - "rabbit"
        type: "A"
        port: 15692
      - names:
          - "traefik"
        type: "A"
        port: 8082
      - names:
          - "redis-exporter"
        type: "A"
        port: 9121
      - names:
          - "postgres-exporter"
        type: "A"
        port: 9187

  - job_name: "traefik"
    static_configs:
      - targets: ["traefik:8082"]

  - job_name: "registry"
    static_configs:
      - targets: ["registry:5001"]

  - job_name: "jaeger"
    dns_sd_configs:
      - names:
          - "tasks.jaeger"
        type: "A"
        port: 14269
    # to generate the token use the following
    # docker run -v /etc/ssl/certs:/etc/ssl/certs:ro --network host \
    #   -e MC_HOST_local="https://12345678:12345678@osparc.local:10000" \
    #   minio/mc admin prometheus generate local
  # - job_name: minio-job
  #   bearer_token: eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJleHAiOjQ3MjM2NDQyODQsImlzcyI6InByb21ldGhldXMifQ.qdhHFZyTV9yyktrHf7xGsgdoN0yijmBsJdH19EUHTBXIZhOkO2C3TIQvna9wnI75HFjXgdAEiUJdyH7dTMcPPQ
  #   metrics_path: /minio/prometheus/metrics
  #   scheme: https
  #   static_configs:
  #   - targets: ['osparc.local:10000']
