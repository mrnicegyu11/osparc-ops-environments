# my global config
global:
  scrape_interval: 15s # By default, scrape targets every 15 seconds.
  evaluation_interval: 15s # By default, scrape targets every 15 seconds.
  # scrape_timeout is set to the global default (10s).

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: "sim-core-monitor"

# Load and evaluate rules in this file every 'evaluation_interval' seconds.
rule_files:
  - "alert.rules"
  - "prometheus.rules.yml"
  # - "first.rules"
  # - "second.rules"

# alert
alerting:
  alertmanagers:
    - scheme: http
      static_configs:
        - targets:
            - "alertmanager:9093"

# A scrape configuration containing exactly one endpoint to scrape:
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.

  # Create a job for Docker daemons. see [https://prometheus.io/docs/guides/dockerswarm/]
  - job_name: "docker-engines"
    dockerswarm_sd_configs:
      - host: unix:///var/run/docker.sock
        role: nodes # this scrapes docker nodes
    relabel_configs:
      # Fetch metrics on port 9323.
      - source_labels: [__meta_dockerswarm_node_address]
        target_label: __address__
        replacement: $1:9323
      # Set hostname as instance label
      - source_labels: [__meta_dockerswarm_node_hostname]
        target_label: instance

  # Create a job for Docker Swarm containers.
  # Prometheus docker swarm discovery will automatically discover services that need to be scraped by prometheus
  # All services that need to be monitored must at least define the following SERVICE labels (in deploy/labels section):
  # deploy:
  #   labels:
  #     # prometheus labels
  #     - prometheus-job=traefik_ops
  #     - prometheus-port=8082
  #
  - job_name: "dockerswarm-tasks"
    dockerswarm_sd_configs:
      - host: unix:///var/run/docker.sock
        role: tasks # this scrapes docker tasks
    relabel_configs:
      # keep only metrics that are available over monitored network
      - source_labels: [__meta_dockerswarm_network_name]
        regex: ${MONITORED_NETWORK}
        action: keep
      # Only keep containers that should be running.
      - source_labels: [__meta_dockerswarm_task_desired_state]
        regex: running
        action: keep
      # Only keep containers that have a `prometheus-job` label.
      - source_labels: [__meta_dockerswarm_service_label_prometheus_job]
        regex: .+
        action: keep
      # Use the prometheus-job Swarm label as Prometheus job label.
      - source_labels:
          [__address__, __meta_dockerswarm_service_label_prometheus_port]
        separator: ";"
        regex: "(.*):.*;(.*)"
        target_label: __address__
        replacement: $1:$2
      # Use the prometheus-port Swarm label as Prometheus job port.
      - source_labels: [__meta_dockerswarm_service_label_prometheus_job]
        target_label: job
      # Set hostname as instance label
      - source_labels: [__meta_dockerswarm_node_hostname]
        target_label: instance
