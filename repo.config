#
#   All Osparc Ops/simcore parameters are configured here.
# - Keep it alfphabetical order and grouped by prefix
# - To expose:  export $(grep -v '^#' .env | xargs -0)
#

# This will set the user/password credentials on all Ops services
SERVICES_USER=admin
SERVICES_PASSWORD=nAkh76NRbbLpTjXrxl8n



MACHINE_FQDN=osparc.io
API_DOMAIN=api.${MACHINE_FQDN}
STORAGE_DOMAIN=storage.${MACHINE_FQDN}


# Cluster name (Can only be master, dalco or aws)
CLUSTER_NAME=aws

# Authorized ips (ips from the team) in case of maintenance
MAINTENANCE_TEAM_IPS=""


# Simcore deployment -------------------------------------------------------
# define the stack prefix name
# 1. stack name = PREFIX_STACK_NAME-SIMCORE_STACK_NAME
# 2. inside stack services are named as in webserver -> PREFIX_STACK_NAME_webserver
PREFIX_STACK_NAME=production

# S3
S3_ACCESS_KEY=AKIATHZO54NSBDLHAMGT
S3_BUCKET=${PREFIX_STACK_NAME}-simcore
S3_ENDPOINT=s3.amazonaws.com
S3_SECRET_KEY=Exh51/dEqwCwl6jrR57xHiE8fwKDuDAuEbJ7PRwN
S3_SECURE=1

# DNS Challenge - Domain provider config for AWS
AWS_ACCESS_KEY_ID=AKIATHZO54NSIQLXVFLZ
AWS_SECRET_ACCESS_KEY=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
AWS_HOSTED_ZONE_ID=Z08117281LL6EDUTVZR77

# We need to add dockerhub credentials to the registry and for the deployer (token created for devops user)
DOCKER_HUB_LOGIN=devops4itis
DOCKER_HUB_PASSWORD=cf81eb16-937e-4568-91cf-269d5f99231f

# Director config : This label will be added by the director to the service deployed by the sidecars.
DIRECTOR_SERVICES_CUSTOM_CONSTRAINTS="node.labels.sidecar==true"

## Theses services won't be deployed by the agent in the simcore stack
EXCLUDED_SIMCORE_SERVICES="webclient, postgres"

# Z43 Gitlab credentials
GITLAB_LOGIN=devops
GITLAB_PASSWORD=D3v0@N07

# Grafana auto-generated dahsboards configuration. values = aws or dalco
GRAFANA_CLUSTER=aws

# Graylog
GRAYLOG_LOGIN=${TRAEFIK_USER}
GRAYLOG_ROOT_PASSWORD=${TRAEFIK_PASSWORD}


# If there are multiple domain name used. If not, let it empty.
MACHINE_FQDNS=

## Mattermost config into deployer
MATTERMOST_CHANNEL_ID=9wj54k8k9tdxffu86jo69za8sc
MATTERMOST_ENABLED=true
MATTERMOST_HEADER_NAME=prod-AWS
MATTERMOST_PERSONAL_TOKEN=ygtxeyabrpfc3bw9obizsm7pky
MATTERMOST_URL=https://mattermost.speag.com

# Minio
# optionally activate the host data folder for each partition (must be /data/diskX/minio on each node where X is the disk number if there is more than one disk per node)
MINIO_HOST_DATA_FOLDER=false
MINIO_NUM_MINIOS=2
MINIO_NUM_PARTITIONS=3

MONITORING_DOMAIN=monitoring.${MACHINE_FQDN}

# Portainer
PORTAINER_DOMAIN=portainer.${MACHINE_FQDN}
PORTAINER_USER=${TRAEFIK_USER}
PORTAINER_PASSWORD=${TRAEFIK_PASSWORD}

# Postgres
POSTGRES_DB=simcoredb
POSTGRES_ENDPOINT=osparc-production.cvtbqufgg2fx.us-east-1.rds.amazonaws.com:5432
# PGSQL user who access data transited into grafana dashboards - this credentials have to be the same for dalco staging and production
POSTGRES_GRAFANA_USER=grafanareader
POSTGRES_GRAFANA_PASSWORD=sdfsdjndgdgd
POSTGRES_HOST=osparc-production.cvtbqufgg2fx.us-east-1.rds.amazonaws.com
POSTGRES_PASSWORD=iQ8Cv6C5DOpuGv8A017h
POSTGRES_PORT=5432
POSTGRES_USER=postgres_osparc


# Prometheus retention
PROMETHEUS_RETENTION=120d

# Rabbit
RABBIT_HOST=${PREFIX_STACK_NAME}_rabbit
RABBIT_LOG_CHANNEL=comp.backend.channels.log
RABBIT_PASSWORD=${TRAEFIK_PASSWORD}
RABBIT_PORT=5672
RABBIT_PROGRESS_CHANNEL=comp.backend.channels.progress
RABBIT_USER=${TRAEFIK_USER}

# Redis-commander
REDIS_HOST=${PREFIX_STACK_NAME}_redis
REDIS_PORT=6379

# registry
REGISTRY_AUTH=True
REGISTRY_AWS_REGION=us-east-1
REGISTRY_DOMAIN=registry.${MACHINE_FQDN}
REGISTRY_PW=${TRAEFIK_PASSWORD}
REGISTRY_S3_ACCESS_KEY=${S3_ACCESS_KEY}
REGISTRY_S3_BUCKET=${REGISTRY_DOMAIN}
REGISTRY_S3_ENDPOINT=${S3_ENDPOINT}
REGISTRY_S3_SECRET_KEY=${S3_SECRET_KEY}
REGISTRY_S3_SECURE="true"
REGISTRY_SSL=False
REGISTRY_USER=${TRAEFIK_USER}

# DNS Challenge - Domain provider config only for DALCO - Z43 in house
RFC2136_NAMESERVER=
RFC2136_POLLING_INTERVAL=
RFC2136_PROPAGATION_TIMEOUT=
RFC2136_TSIG_ALGORITHM=
RFC2136_TSIG_KEY=
RFC2136_TSIG_SECRET=



SCICRUNCH_API_KEY=7iTxpRz005UmkLbjR37GYOpXvomxwGcX



# Simcore deployment -------------------------------------------------------
SIMCORE_BRANCH=master
SIMCORE_COMPUTATIONAL_NETWORK_SUBNET=172.12.0.0/16
# set the image tag the deployment-agent will use to deploy the simcore stack
SIMCORE_IMAGE_TAG=release-github-latest
SIMCORE_INTERACTIVE_NETWORK_SUBNET=172.13.0.0/16
# define the stack prefix name 
# 1. stack name = PREFIX_STACK_NAME-SIMCORE_STACK_NAME
# 2. inside stack services are named as in webserver -> PREFIX_STACK_NAME_webserver
SIMCORE_STACK_NAME=production-simcore

# Mail server
SMTP_HOST=smtp.${MACHINE_FQDN}
SMTP_PORT=25
SMTP_USERNAME=support@osparc.io
SMTP_PASSWORD=adfsf878686DSJKDKSJKJKS6553
SMTP_TLS_ENABLED=1


## Tags for the simcore repo. Has to respect the following formatting : "tags: ^v[0-9]+.[0-9]+.[0-9]+$" with "". Let empty if no tags
TAGS_SIMCORE_REPO="tags: ^v[0-9]+.[0-9]+.[0-9]+$"

# MPI nodes
TARGET_MPI_NODE_CPU_COUNT=48

# Testing (e2e/p2p)
TESTING_WEB_DOMAIN=testing.${MACHINE_FQDN}
TESTING_API_DOMAIN=testing.${API_DOMAIN}

# Traefik
TRAEFIK_USER=admin
TRAEFIK_PASSWORD=nAkh76NRbbLpTjXrxl8n
TRAEFIK_SIMCORE_ZONE=${PREFIX_STACK_NAME}_internal_simcore_stack

# CATALOG
CATALOG_DEV_FEATURES_ENABLED=0

# Webserver
# WARNING: enabled for the extension of the hackathon on July 2021. Then disable.
API_SERVER_DEV_FEATURES_ENABLED=1
WEBSERVER_DEV_FEATURES_ENABLED=0
WEBSERVER_LOGIN_REGISTRATION_CONFIRMATION_REQUIRED=1
WEBSERVER_LOGIN_REGISTRATION_INVITATION_REQUIRED=1
WEBSERVER_STUDIES_ACCESS_ENABLED=1



# Manager ips. Do not touch. Defined automatically with deployment scripts.
MANAGER_PRIVATE_ENDPOINT_IP=10.0.0.238
MANAGER_PUBLIC_ENDPOINT_IP=3.233.57.12




# Token used for sessions purpose: Do not touch, automatically generated
WEBSERVER_SESSION_SECRET_KEY=b'qIGQGNH4Cb_5jsuyYgRkX6NHL3K-sLu0pTONQKXMDVM='


DASK_SCHEDULER_HOST=${PREFIX_STACK_NAME}_dask-scheduler


# Do not touch, automatically generated
MINIO_PROMETHEUS_TOKEN=
DIAGNOSTICS_MAX_AVG_LATENCY=30


