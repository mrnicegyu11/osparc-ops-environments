#
#   All Osparc Ops/simcore parameters are configured here.
# - Keep it alfphabetical order and grouped by prefix
# - To expose:  export $(grep -v '^#' .env | xargs -0)
#

# This will set the user/password credentials on all Ops services
SERVICES_USER=admin
SERVICES_PASSWORD=pandasles


# Set the desired local domain name here. MACHINE_FQDN need to be ALWAYS filled, even when MACHINE_FQDNS is filled.
MACHINE_FQDN=osparc.speag.com

API_DOMAIN=api.${MACHINE_FQDN}
STORAGE_DOMAIN=storage.${MACHINE_FQDN}


# Cluster name (Can only be master, dalco or aws)
CLUSTER_NAME=dalco

# Authorized ips (ips from the team) in case of maintenance
MAINTENANCE_TEAM_IPS="172.16.8.39, 172.16.8.64, 10.43.103.179, 172.16.8.68, 172.16.8.72, 10.43.103.168, 172.16.8.26, 172.16.9.150, 172.16.9.89, 10.43.200.15, 172.16.9.146"


# Simcore deployment -------------------------------------------------------
# define the stack prefix name 
# 1. stack name = PREFIX_STACK_NAME-SIMCORE_STACK_NAME
# 2. inside stack services are named as in webserver -> PREFIX_STACK_NAME_webserver
PREFIX_STACK_NAME=production

# S3
S3_ACCESS_KEY=gfhfgh765gjtyjtj
S3_BUCKET=${PREFIX_STACK_NAME}-simcore
S3_ENDPOINT=${STORAGE_DOMAIN}
S3_SECRET_KEY=fjghjgjdsdg345
S3_SECURE=1

# DNS Challenge - Domain provider config for AWS
AWS_ACCESS_KEY_ID=
AWS_HOSTED_ZONE_ID=
AWS_SECRET_ACCESS_KEY=

# We need to add dockerhub credentials to the registry and for the deployer (token created for devops user)
DOCKER_HUB_LOGIN=devops4itis
DOCKER_HUB_PASSWORD=cf81eb16-937e-4568-91cf-269d5f99231f

# Director config : This label will be added by the director to the service deployed by the sidecars.
DIRECTOR_SERVICES_CUSTOM_CONSTRAINTS=

#    Theses services won't be deployed by the agent in the simcore stack
EXCLUDED_SIMCORE_SERVICES="webclient"

# Z43 Gitlab credentials
GITLAB_LOGIN=devops
GITLAB_PASSWORD=D3v0@N07

# Grafana auto-generated dahsboards configuration. values = aws or dalco
GRAFANA_CLUSTER=aws

# Graylog
GRAYLOG_LOGIN=${SERVICES_USER}
GRAYLOG_ROOT_PASSWORD=${SERVICES_PASSWORD}

# If there are multiple domain name used. If not, let it empty. If yes, add only the secondary domains (ex if you have osparc-master.speag.com and tis-master.speag.com, only add tis-master.speag.com here. osparc-master.speag.com has to be set up in the MACHINE_FQDN variable.) Format is MACHINE_FQDNS="tis.speag.com,s4l.speag.com"
MACHINE_FQDNS="osparc.speag.com, ti-solutions.io, sim4life.io, tis.speag.com, s4l.speag.com"

## Mattermost config into deployer
MATTERMOST_CHANNEL_ID=9wj54k8k9tdxffu86jo69za8sc
MATTERMOST_ENABLED=true
MATTERMOST_HEADER_NAME=prod-dalco
MATTERMOST_PERSONAL_TOKEN=ygtxeyabrpfc3bw9obizsm7pky
MATTERMOST_URL=https://mattermost.speag.com

# Minio
# Optionally activate the host data folder for each partition (must be /data/diskX/minio on each node where X is the disk number if there is more than one disk per node)
MINIO_HOST_DATA_FOLDER=true
MINIO_NUM_MINIOS=4
MINIO_NUM_PARTITIONS=2

MONITORING_DOMAIN=monitoring.${MACHINE_FQDN}

# Portainer
PORTAINER_DOMAIN=portainer.${MACHINE_FQDN}
PORTAINER_PASSWORD=${SERVICES_PASSWORD}
PORTAINER_USER=${SERVICES_USER}

# Postgres
POSTGRES_DB=simcoredb
POSTGRES_ENDPOINT=${PREFIX_STACK_NAME}_postgres:5432
# PGSQL user who access data transited into grafana dashboards - this credentials have to be the same for dalco staging and production
POSTGRES_GRAFANA_USER=grafanareader
POSTGRES_GRAFANA_PASSWORD=sdfsdjndgdgd
POSTGRES_HOST=${PREFIX_STACK_NAME}_postgres
POSTGRES_PASSWORD=ghj56fgf
POSTGRES_PORT=5432
POSTGRES_USER=postgres


# Prometheus retention
PROMETHEUS_RETENTION=120d

# Rabbit
RABBIT_HOST=${PREFIX_STACK_NAME}_rabbit
RABBIT_LOG_CHANNEL=comp.backend.channels.log
RABBIT_PASSWORD=${SERVICES_PASSWORD}
RABBIT_PORT=5672
RABBIT_PROGRESS_CHANNEL=comp.backend.channels.progress
RABBIT_USER=${SERVICES_USER}

# Redis-commander
REDIS_HOST=${PREFIX_STACK_NAME}_redis
REDIS_PORT=6379

# Registry
REGISTRY_AUTH=True
REGISTRY_AWS_REGION=us-east-1
REGISTRY_DOMAIN=registry.${MACHINE_FQDN}
REGISTRY_PW=${SERVICES_PASSWORD}
REGISTRY_S3_ACCESS_KEY=${S3_ACCESS_KEY}
REGISTRY_S3_BUCKET=${REGISTRY_DOMAIN}
REGISTRY_S3_ENDPOINT=${S3_ENDPOINT}
REGISTRY_S3_SECRET_KEY=${S3_SECRET_KEY}
REGISTRY_S3_SECURE="true"
REGISTRY_SSL=False
REGISTRY_USER=${SERVICES_USER}

# DNS Challenge - Domain provider config for DALCO - Z43 in house
RFC2136_NAMESERVER=ns1.speag.com
RFC2136_POLLING_INTERVAL=5
RFC2136_PROPAGATION_TIMEOUT=130
RFC2136_TSIG_ALGORITHM=hmac-sha512.
RFC2136_TSIG_KEY=osparc-key
RFC2136_TSIG_SECRET=kGAdjyfuOEOVAQXakwWxZm9GoYJ5PS4L/F4DT3yNeEPQdaSrrC0Wj3yxHQAac3AwoHSawvVcDGLwlc/YoUO0Ag==



SCICRUNCH_API_KEY=VT02S5rg0xMBPqYWu4cDTor3NmDLdJZx



# Simcore deployment -------------------------------------------------------
SIMCORE_BRANCH=master
SIMCORE_COMPUTATIONAL_NETWORK_SUBNET=172.12.0.0/16
# set the image tag the deployment-agent will use to deploy the simcore stack
SIMCORE_IMAGE_TAG=release-github-latest
SIMCORE_INTERACTIVE_NETWORK_SUBNET=172.13.0.0/16
# define the stack prefix name 
# 1. stack name = PREFIX_STACK_NAME-SIMCORE_STACK_NAME
# 2. inside stack services are named as in webserver -> PREFIX_STACK_NAME_webserver
SIMCORE_STACK_NAME=production-simcore

# Mail server
SMTP_HOST=smtp.${MACHINE_FQDN}
SMTP_PORT=25
SMTP_USERNAME=support@osparc.io
SMTP_PASSWORD=hkbjfgfg
SMTP_TLS_ENABLED=1


# Tags for the simcore repo. Has to respect the following formatting : "tags: ^v[0-9]+.[0-9]+.[0-9]+$" with "". Let empty if no tags
TAGS_SIMCORE_REPO="tags: ^v[0-9]+.[0-9]+.[0-9]+$"

# MPI nodes
TARGET_MPI_NODE_CPU_COUNT=48

# Testing (e2e/p2p)
TESTING_WEB_DOMAIN=testing.${MACHINE_FQDN}
TESTING_API_DOMAIN=testing.${API_DOMAIN}

# Traefik
TRAEFIK_USER=${SERVICES_USER}
TRAEFIK_PASSWORD=${SERVICES_PASSWORD}
TRAEFIK_SIMCORE_ZONE=${PREFIX_STACK_NAME}_internal_simcore_stack

# CATALOG
CATALOG_DEV_FEATURES_ENABLED=0

# Webserver
API_SERVER_DEV_FEATURES_ENABLED=1
WEBSERVER_DEV_FEATURES_ENABLED=0
WEBSERVER_LOGIN_REGISTRATION_CONFIRMATION_REQUIRED=1
WEBSERVER_LOGIN_REGISTRATION_INVITATION_REQUIRED=0
WEBSERVER_STUDIES_ACCESS_ENABLED=1



# Manager ips. Do not touch. Defined automatically with deployment scripts.
MANAGER_PRIVATE_ENDPOINT_IP=172.16.9.12
MANAGER_PUBLIC_ENDPOINT_IP=195.176.8.200



# Token used for sessions purpose
WEBSERVER_SESSION_SECRET_KEY=b'SexYuep1O7_3bMMFydG2MTl1XK_zzpRzKTtoGl7xEk='


DASK_SCHEDULER_HOST=${PREFIX_STACK_NAME}_dask-scheduler
